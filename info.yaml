yaml_version: 1.0
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Â© 2024 Your Name

---
project:
  name: "Simple Echo Design"
  description: "A Tiny Tapeout demo that echoes 8 input bits (ui_in) directly to 8 output bits (uo_out)."
  author: "Dr. Sowmya K B, Dr. Veenadivya Krishna, Dr. Shilpa D R"
  license: "Apache-2.0"

# Clock: Tiny Tapeout requires declaring the frequency if your design uses it
clock_hz: 25000000   # 25 MHz

# I/O description
pins:
  inputs:
    - ui_in[0]: "Input bit 0"
    - ui_in[1]: "Input bit 1"
    - ui_in[2]: "Input bit 2"
    - ui_in[3]: "Input bit 3"
    - ui_in[4]: "Input bit 4"
    - ui_in[5]: "Input bit 5"
    - ui_in[6]: "Input bit 6"
    - ui_in[7]: "Input bit 7"
  outputs:
    - uo_out[0]: "Echo of ui_in[0]"
    - uo_out[1]: "Echo of ui_in[1]"
    - uo_out[2]: "Echo of ui_in[2]"
    - uo_out[3]: "Echo of ui_in[3]"
    - uo_out[4]: "Echo of ui_in[4]"
    - uo_out[5]: "Echo of ui_in[5]"
    - uo_out[6]: "Echo of ui_in[6]"
    - uo_out[7]: "Echo of ui_in[7]"
  bidirectional:
    - uio_in[7:0]: "Unused bidirectional inputs"
    - uio_out[7:0]: "Unused bidirectional outputs"
    - uio_oe[7:0]: "Bidirectional enables (unused)"

# Test files
tests:
  - tests/test_tt_um_simple_echo.py

# Docs (optional: you can add block diagram or images <1MB)
documentation: |
  ## How it works
  This is the simplest possible Tiny Tapeout design. Whatever is driven on `ui_in`
  is passed directly to `uo_out`, provided `ena` is high. If `ena` is low,
  the outputs are forced to zero.

  ## How to test
  - Run the Cocotb testbench with `make test`.
  - Or run the Verilog testbench with `iverilog` and `vvp`.
